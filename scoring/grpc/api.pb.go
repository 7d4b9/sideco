// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package scoring

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListTaskTagsRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskTagsRequest) Reset()         { *m = ListTaskTagsRequest{} }
func (m *ListTaskTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskTagsRequest) ProtoMessage()    {}
func (*ListTaskTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *ListTaskTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskTagsRequest.Unmarshal(m, b)
}
func (m *ListTaskTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskTagsRequest.Merge(m, src)
}
func (m *ListTaskTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskTagsRequest.Size(m)
}
func (m *ListTaskTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskTagsRequest proto.InternalMessageInfo

func (m *ListTaskTagsRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ListTaskTagsResponse struct {
	Tag                  []string `protobuf:"bytes,1,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskTagsResponse) Reset()         { *m = ListTaskTagsResponse{} }
func (m *ListTaskTagsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTaskTagsResponse) ProtoMessage()    {}
func (*ListTaskTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *ListTaskTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskTagsResponse.Unmarshal(m, b)
}
func (m *ListTaskTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskTagsResponse.Marshal(b, m, deterministic)
}
func (m *ListTaskTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskTagsResponse.Merge(m, src)
}
func (m *ListTaskTagsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTaskTagsResponse.Size(m)
}
func (m *ListTaskTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskTagsResponse proto.InternalMessageInfo

func (m *ListTaskTagsResponse) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

func init() {
	proto.RegisterType((*ListTaskTagsRequest)(nil), "scoring.ListTaskTagsRequest")
	proto.RegisterType((*ListTaskTagsResponse)(nil), "scoring.ListTaskTagsResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0xce, 0x2f, 0xca, 0xcc, 0x4b, 0x57, 0xd2,
	0xe5, 0x12, 0xf6, 0xc9, 0x2c, 0x2e, 0x09, 0x49, 0x2c, 0xce, 0x0e, 0x49, 0x4c, 0x2f, 0x0e, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b, 0x49, 0x2c, 0xce, 0xf6, 0x4c, 0x91,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x94, 0x34, 0xb8, 0x44, 0x50, 0x95, 0x17, 0x17,
	0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x09, 0x70, 0x31, 0x97, 0x24, 0xa6, 0x4b, 0x30, 0x2a, 0x30, 0x6b,
	0x70, 0x06, 0x81, 0x98, 0x46, 0x11, 0x5c, 0xec, 0xc1, 0x10, 0x3b, 0x84, 0x7c, 0xb9, 0x78, 0x90,
	0x35, 0x09, 0xc9, 0xe8, 0x41, 0x6d, 0xd7, 0xc3, 0x62, 0xb5, 0x94, 0x2c, 0x0e, 0x59, 0x88, 0x4d,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x2f, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x10, 0xbf, 0x2e,
	0x5d, 0xcf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScoringClient is the client API for Scoring service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScoringClient interface {
	// A simple RPC.
	//
	// ListTaskTags returns the list of tags for a particular taskthe matching between a given set of applicants and a given mission.
	ListTaskTags(ctx context.Context, in *ListTaskTagsRequest, opts ...grpc.CallOption) (*ListTaskTagsResponse, error)
}

type scoringClient struct {
	cc *grpc.ClientConn
}

func NewScoringClient(cc *grpc.ClientConn) ScoringClient {
	return &scoringClient{cc}
}

func (c *scoringClient) ListTaskTags(ctx context.Context, in *ListTaskTagsRequest, opts ...grpc.CallOption) (*ListTaskTagsResponse, error) {
	out := new(ListTaskTagsResponse)
	err := c.cc.Invoke(ctx, "/scoring.Scoring/ListTaskTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScoringServer is the server API for Scoring service.
type ScoringServer interface {
	// A simple RPC.
	//
	// ListTaskTags returns the list of tags for a particular taskthe matching between a given set of applicants and a given mission.
	ListTaskTags(context.Context, *ListTaskTagsRequest) (*ListTaskTagsResponse, error)
}

func RegisterScoringServer(s *grpc.Server, srv ScoringServer) {
	s.RegisterService(&_Scoring_serviceDesc, srv)
}

func _Scoring_ListTaskTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoringServer).ListTaskTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scoring.Scoring/ListTaskTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoringServer).ListTaskTags(ctx, req.(*ListTaskTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scoring_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scoring.Scoring",
	HandlerType: (*ScoringServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTaskTags",
			Handler:    _Scoring_ListTaskTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
